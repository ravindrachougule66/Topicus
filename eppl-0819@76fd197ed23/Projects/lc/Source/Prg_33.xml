<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<Application>

  <Header>
    <Version val="13021"/>
    <WithIsn val="Y"/>
    <_InternalTask val="N"/>
    <IsRoot val="N"/>
    <InIndex val="N"/>
    <UniqueISNConvState val="12"/>
  </Header>

  <ProgramsRepository>
    <Programs>
      <Task MainProgram="N">
        <Header Description="BE_AboutMagicVersie" ISN_2="1" LastIsn="2" id="33">
          <Public val="LC_AboutMagicXPAVersion"/>
          <ExecutionRight comp="-1"/>
          <Resident val="N"/>
          <SQL val="N"/>
          <ReturnValue>
            <ReturnValueAttr/>
            <ParametersAttributes/>
          </ReturnValue>
          <SqlWhereExist val="N"/>
          <TaskType val="O"/>
          <External val="N"/>
          <Offline val="N"/>
          <FormType val="N"/>
          <DotNetObjectExists val="Y"/>
          <LastModified _date="736801" _time="55538" date="17/04/2018" time="15:25:38"/>
        </Header>
        <ItemIsn val="4"/>
        <Resource>
          <Columns>
            <Column id="1" name="listComponents">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_BLOB" id="1"/>
                <Size id="174" val="28"/>
                <Definition id="175" val="1"/>
                <_FieldStyle id="276" val="5"/>
                <ObjectType id="478" val="System.Windows.Forms.ListView"/>
              </PropertyList>
            </Column>
            <Column id="9" name="RV">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_NUMERIC" id="1"/>
                <Picture id="157" valUnicode="N10"/>
                <_Dec id="181"/>
                <_Whole id="182" val="10"/>
                <_Negative id="192" val="Y"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="13" name="b_ok">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="X15"/>
                <DefaultValue id="170" val="&amp;OK"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="15"/>
                <DbColumnName id="178"/>
                <Type id="179"/>
                <UserType id="180"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
            <Column id="12" name="b_Output">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_ALPHA" id="1"/>
                <Picture id="157" valUnicode="X30"/>
                <StoredAs id="173" val="1"/>
                <Size id="174" val="30"/>
                <_Flip id="194"/>
              </PropertyList>
            </Column>
          </Columns>
        </Resource>
        <Information>
          <Key>
            <Mode val="N"/>
          </Key>
          <DB comp="-1"/>
          <Sort>
            <CLS val="A"/>
          </Sort>
          <ForceRecordDelete DEL="N"/>
          <EndTaskCondition val="N"/>
          <EvaluateEndCondition val="B"/>
          <InitialMode val="M"/>
          <Locate Direction="A"/>
          <Range Direction="A"/>
          <VarRange/>
          <TaskProperties>
            <SelectionTable val="N"/>
            <ConfirmUpdate CNFU="N"/>
            <ConfirmCancel val="N"/>
            <ErrorStrategy val="R"/>
            <LockingStrategy val="M"/>
            <CacheStrategy val="D"/>
            <ForceRecordSuffix val="N"/>
            <TransactionMode val="D"/>
            <TransactionBegin val="P"/>
            <PreloadView val="N"/>
            <AllowEmptyDataview val="Y"/>
            <KeepCreatedContext val="N"/>
          </TaskProperties>
          <SIDE_WIN>
            <AllowOptions val="Y"/>
            <AllowQuery val="Y"/>
            <AllowModify val="Y"/>
            <AllowCreate val="Y"/>
            <AllowDelete val="Y"/>
            <AllowLocate val="Y"/>
            <AllowRange val="Y"/>
            <AllowIndexChange val="Y"/>
            <AllowSorting val="Y"/>
            <AllowIOFiles val="Y"/>
            <RecordCycle val="Y"/>
            <AllowEvents val="Y"/>
            <AllowIndexOptimization val="Y"/>
            <AllowLocationInQuery val="Y"/>
            <AllowPrintingData val="N"/>
          </SIDE_WIN>
          <WIN>
            <OpenTaskWindow val="Y"/>
            <CloseTaskWindow val="Y"/>
            <ForegroundWindow val="Y"/>
            <FlipFld val="N"/>
            <RefreshTaskWindow ReturnValue="N"/>
          </WIN>
          <BOX>
            <Direction val="V"/>
          </BOX>
        </Information>
        <TaskLogic>
          <LogicUnit id="2" propagate="78">
            <Level val="R"/>
            <Type val="M"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
              <PublicObject comp="-1"/>
            </Event>
            <LogicLines>
              <LogicLine>
                <DATAVIEW_SRC FlowIsn="2" Type="M">
                  <Condition val="N"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </DATAVIEW_SRC>
              </LogicLine>
              <LogicLine>
                <Select FieldID="1" FlowIsn="3" id="1">
                  <Column val="1"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="2" FlowIsn="4" id="2">
                  <Column val="9"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="5">
                  <Type val="0"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Select FieldID="3" FlowIsn="6" id="3">
                  <Column val="13"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <_DitIndexForToolkit val="4"/>
                  <DIFF_UPDATE val="T"/>
                  <PartOfDataview val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="4" FlowIsn="7" id="4">
                  <ASS val="1"/>
                  <Column val="12"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <_DitIndexForToolkit val="3"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
          <LogicUnit id="3" propagate="78">
            <Level val="T"/>
            <Type val="P"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
              <PublicObject comp="-1"/>
            </Event>
            <Expanded val="1"/>
            <LogicLines>
              <LogicLine>
                <RaiseEvent FlowIsn="8">
                  <Event>
                    <EventType val="U"/>
                    <PublicObject comp="-1" obj="1"/>
                  </Event>
                  <Wait val="78"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </RaiseEvent>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
          <LogicUnit id="4" propagate="78">
            <Level val="H"/>
            <Type val="U"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="U"/>
              <PublicObject comp="-1" obj="1"/>
            </Event>
            <Expanded val="1"/>
            <LogicLines>
              <LogicLine>
                <Invoke FlowIsn="9">
                  <OperationType val="."/>
                  <TaskID comp="-1"/>
                  <Lock val="N"/>
                  <Arguments>
                    <Argument>
                      <Variable val="2"/>
                      <Skip val="N"/>
                      <DotNetType val="System.Double"/>
                    </Argument>
                    <Argument>
                      <Variable val="1"/>
                      <Skip val="N"/>
                      <Name val="listComponents"/>
                      <VT_Type val="4"/>
                      <DotNetType val="System.Windows.Forms.ListView"/>
                    </Argument>
                  </Arguments>
                  <Wait val="Y"/>
                  <SyncData val="N"/>
                  <ReturnValue val="2"/>
                  <FunctionName val="AboutMagicXPA"/>
                  <SnippetCode val="using System;&#xA;using System.Drawing;&#xA;using System.Windows.Forms;&#xA;using System.Reflection;&#xA;using System.Diagnostics;&#xA;using System.IO;&#xA;using System.Runtime.ConstrainedExecution;&#xA;using System.Runtime.InteropServices;&#xA;using System.Security;&#xA;&#xA;public static class Snippet&#xA;{&#xA; public static System.Double AboutMagicXPA(ref System.Windows.Forms.ListView listComponents)&#xA; {&#xA;&#x9;try&#xA;&#x9;{&#xA;&#x9;// set labels&#xA;&#x9;FileVersionInfo ff = System.Diagnostics.FileVersionInfo.GetVersionInfo(AppDomain.CurrentDomain.BaseDirectory+&quot;mgcore.dll&quot;);&#xA;&#x9;ListViewItem item;&#xA;&#x9;System.Collections.Generic.List&lt;String> test = new System.Collections.Generic.List&lt;String>();&#xA;&#x9;&#xA;&#x9;//Version = &quot;Version: &quot; + Application.ProductVersion.ToString();&#xA;&#x9;//Description =Application.ProductName.ToString();&#xA;&#x9;//Companyname = Application.CompanyName.ToString();&#xA;&#x9;&#xA;&#x9;//Version = ff.FileVersion;&#xA;&#x9;//Description = Application.ProductName;&#xA;&#x9;//Companyname = ff.CompanyName;&#xA;&#x9;//Copyright = ff.LegalCopyright;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;// display components used by this assembly&#xA;&#x9;System.Windows.Forms.ColumnHeader ColumnHeader1 = new System.Windows.Forms.ColumnHeader();&#xA;&#x9;System.Windows.Forms.ColumnHeader ColumnHeader2 = new System.Windows.Forms.ColumnHeader();&#xA;&#x9;System.Windows.Forms.ColumnHeader ColumnHeader3 = new System.Windows.Forms.ColumnHeader();&#xA;&#x9;ColumnHeader1.Text = &quot;Name&quot;;&#xA;&#x9;ColumnHeader1.Width = 190;&#xA;&#x9;ColumnHeader2.Text = &quot;Version&quot;;&#xA;&#x9;ColumnHeader2.Width = 250;&#xA;&#x9;ColumnHeader2.AutoResize(System.Windows.Forms.ColumnHeaderAutoResizeStyle.HeaderSize);&#xA;&#x9;ColumnHeader3.Text = &quot;&quot;;&#xA;&#x9;ColumnHeader3.Width = 226;&#xA;&#x9;ColumnHeader3.AutoResize(System.Windows.Forms.ColumnHeaderAutoResizeStyle.HeaderSize);&#xA;&#x9;&#x9;&#xA;&#x9;listComponents.AccessibleDescription = &quot;Components List&quot;;&#xA;&#x9;listComponents.AccessibleName = &quot;Components List&quot;;&#xA;&#x9;listComponents.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ColumnHeader1,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ColumnHeader2,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ColumnHeader3});&#xA;&#x9;listComponents.FullRowSelect = true;&#xA;&#x9;listComponents.GridLines = true;&#xA;&#x9;//listComponents.Location = new System.Drawing.Point(8, 96);&#xA;&#x9;listComponents.Name = &quot;listComponents&quot;;&#xA;&#x9;//listComponents.Size = new System.Drawing.Size(368, 104);&#xA;&#x9;&#xA;&#x9;//listComponents.BackColor=System.Drawing.Color.Azure;&#xA;&#x9;listComponents.View = System.Windows.Forms.View.Details;&#xA;&#x9;&#xA;&#x9;// Magic&#xA;&#x9;item = listComponents.Items.Add(Application.ProductName);&#xA;&#x9;item.SubItems.Add( ff.FileVersion);&#xA;&#x9;item.SubItems.Add(ff.CompanyName);&#xA;&#x9;&#xA;&#x9;// Windows&#xA;&#x9;item = listComponents.Items.Add(&quot;OS Versie&quot;);&#xA;&#x9;item.SubItems.Add(Environment.OSVersion.VersionString);&#xA;&#x9;if(Is64BitOperatingSystem())&#xA;&#x9;&#x9;item.SubItems.Add(&quot;64 Bit&quot;);&#xA;&#x9;else&#xA;&#x9;&#x9;item.SubItems.Add(&quot;32 Bit&quot;);&#xA;&#x9;&#xA;&#x9;// .net&#xA;&#x9;item = listComponents.Items.Add(&quot;Microsoft .Net&quot;);&#xA;&#x9;item.SubItems.Add(Environment.Version.ToString());&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;String folder = AppDomain.CurrentDomain.BaseDirectory.ToLower() +&quot;gateways\\&quot; ;&#xA;&#x9;&#xA;&#x9;Process myProcess = Process.GetCurrentProcess();&#xA;&#x9;if(myProcess != null)&#xA;&#x9;{&#xA;&#x9;&#x9;foreach (ProcessModule processModule in myProcess.Modules)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;if(processModule.FileName.ToLower().StartsWith(folder))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;item =listComponents.Items.Add(processModule.ModuleName);&#xA;&#x9;&#x9;item.SubItems.Add(ff.FileVersion);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;test.Add(processModule.ModuleName.Substring(2,processModule.ModuleName.Length-6));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;foreach(String s in test)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;String tempVersie =&quot;&quot;;&#xA;&#x9;&#x9;String CompanyName = &quot;&quot;;&#xA;&#x9;&#x9;FileVersionInfo fvi; &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;int a=0;&#xA;&#x9;&#x9;int b=0;&#xA;&#x9;&#x9;int c=0;&#xA;&#x9;&#x9;int d=0;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;foreach (ProcessModule processModule in myProcess.Modules)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;fvi = processModule.FileVersionInfo;&#xA;&#x9;&#x9;if(fvi.FileDescription != null &amp;&amp; fvi.FileDescription.ToUpper().Contains(s))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;if( CompanyName == &quot;&quot;) &#xA;&#x9;&#x9;&#x9;CompanyName = fvi.CompanyName;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if(a &lt; fvi.FileMajorPart)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;a = fvi.FileMajorPart;&#xA;&#x9;&#x9;&#x9;b = fvi.FileMinorPart;&#xA;&#x9;&#x9;&#x9;c = fvi.FileBuildPart;&#xA;&#x9;&#x9;&#x9;d = fvi.FilePrivatePart;&#xA;&#x9;&#x9;&#x9;tempVersie = fvi.FileVersion;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if(a == fvi.FileMajorPart &amp;&amp; b&lt;fvi.FileMinorPart)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;b = fvi.FileMinorPart;&#xA;&#x9;&#x9;&#x9;c = fvi.FileBuildPart;&#xA;&#x9;&#x9;&#x9;d = fvi.FilePrivatePart;&#xA;&#x9;&#x9;&#x9;tempVersie = fvi.FileVersion;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if(a == fvi.FileMajorPart &amp;&amp; b==fvi.FileMinorPart &amp;&amp; c&lt;fvi.FileBuildPart)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;c = fvi.FileBuildPart;&#xA;&#x9;&#x9;&#x9;d = fvi.FilePrivatePart;&#xA;&#x9;&#x9;&#x9;tempVersie = fvi.FileVersion;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else if(a == fvi.FileMajorPart &amp;&amp; b==fvi.FileMinorPart &amp;&amp; c==fvi.FileBuildPart &amp;&amp; d&lt;fvi.FilePrivatePart)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;d = fvi.FilePrivatePart;&#xA;&#x9;&#x9;&#x9;tempVersie = fvi.FileVersion;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;//item =listComponents.Items.Add(processModule.ModuleName);&#xA;&#x9;&#x9;//item.SubItems.Add(processModule.FileVersionInfo.FileVersion);&#xA;&#x9;&#x9;//item.SubItems.Add(&quot;&quot;+fvi.FileMajorPart+&quot;.&quot;+fvi.FileMinorPart+&quot;.&quot;+fvi.FileBuildPart+&quot;.&quot;+fvi.FilePrivatePart );&#xA;&#x9;&#x9;//item.SubItems.Add(processModule.FileVersionInfo.CompanyName);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(tempVersie != &quot;&quot;)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;item =listComponents.Items.Add(s);&#xA;&#x9;&#x9;item.SubItems.Add(tempVersie);&#xA;&#x9;&#x9;item.SubItems.Add(CompanyName);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;Assembly[] Assemblys = AppDomain.CurrentDomain.GetAssemblies();&#xA;&#x9;foreach( Assembly asm in Assemblys )&#xA;&#x9;{&#xA;&#x9;&#x9;string Title =&quot;&quot;;&#xA;&#x9;&#x9;string Version2 = &quot;&quot;;&#xA;&#x9;&#x9;string Company = &quot;&quot;;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;object[] attributes = asm.GetCustomAttributes(typeof(AssemblyTitleAttribute),false);&#xA;&#x9;&#x9;if(attributes.Length >0)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;AssemblyTitleAttribute ata =(AssemblyTitleAttribute) attributes[0];&#xA;&#x9;&#x9;Title = ata.Title;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;attributes = asm.GetCustomAttributes(typeof(AssemblyFileVersionAttribute),false);&#xA;&#x9;&#x9;if(attributes.Length >0)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;AssemblyFileVersionAttribute ava =(AssemblyFileVersionAttribute) attributes[0];&#xA;&#x9;&#x9;Version2 = ava.Version;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;attributes = asm.GetCustomAttributes(typeof(AssemblyCompanyAttribute),false);&#xA;&#x9;&#x9;if(attributes.Length >0)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;AssemblyCompanyAttribute aca =(AssemblyCompanyAttribute) attributes[0];&#xA;&#x9;&#x9;Company = aca.Company;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if(Title != &quot;&quot; &amp;&amp; Company.Contains(&quot;Microsoft&quot;)==false &amp;&amp; Company.ToLower().Contains(&quot;magic&quot;)==false &amp;&amp; Company != &quot;&quot;  )&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;item = listComponents.Items.Add(Title);&#xA;&#x9;&#x9;if(Version2==&quot;&quot;)&#xA;&#x9;&#x9;item.SubItems.Add(FileVersionInfo.GetVersionInfo(asm.Location).FileVersion);&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;item.SubItems.Add(Version2);&#xA;&#x9;&#x9;item.SubItems.Add(Company);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;}&#xA;&#x9;catch (Exception e)&#xA;&#x9;{&#xA;&#x9;&#x9;MessageBox.Show(&quot;Er is een fout opgetreden:&quot;&#xA;&#x9;&#x9;+e.Data.ToString()&#xA;&#x9;&#x9;+e.StackTrace.ToString()&#xA;&#x9;&#x9;//+e.InnerException.ToString()&#xA;&#x9;&#x9;+e.Message.ToString(), &quot;Error occured&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return 0;&#xA;&#x9;}&#xA;&#xA;&#x9;[DllImport(&quot;kernel32.dll&quot;, CharSet = CharSet.Ansi, SetLastError = true, ExactSpelling = true)]&#xA;    private static extern IntPtr GetProcAddress(IntPtr hModule, string methodName);&#xA;&#xA;    [ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail), DllImport(&quot;kernel32.dll&quot;, CharSet = CharSet.Auto, SetLastError = true)]&#xA;    private static extern IntPtr GetModuleHandle(string moduleName);&#xA;&#xA;    [DllImport(&quot;kernel32.dll&quot;, CharSet = CharSet.Auto, SetLastError = true)]&#xA;    internal static extern IntPtr GetCurrentProcess();&#xA;&#xA;    [SecurityCritical]&#xA;    internal static bool DoesWin32MethodExist(string moduleName, string methodName)&#xA;    {&#xA;        IntPtr moduleHandle = GetModuleHandle(moduleName);&#xA;        if (moduleHandle == IntPtr.Zero)&#xA;        {&#xA;            return false;&#xA;        }&#xA;        return (GetProcAddress(moduleHandle, methodName) != IntPtr.Zero);&#xA;    }&#xA;&#xA;    [return: MarshalAs(UnmanagedType.Bool)]&#xA;    [DllImport(&quot;kernel32.dll&quot;, SetLastError = true)]&#xA;    internal static extern bool IsWow64Process([In] IntPtr hSourceProcessHandle, [MarshalAs(UnmanagedType.Bool)] out bool isWow64);&#xA;&#xA;    [SecuritySafeCritical]&#xA;    public static bool Is64BitOperatingSystem()&#xA;    {&#xA;        bool flag;&#xA;        return (IntPtr.Size == 8) ||&#xA;            ((DoesWin32MethodExist(&quot;kernel32.dll&quot;, &quot;IsWow64Process&quot;) &amp;&amp;&#xA;            IsWow64Process(GetCurrentProcess(), out flag)) &amp;&amp; flag);&#xA;    }&#xA;}"/>
                  <CompiledCode val="TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDAGzvc1YAAAAAAAAAAOAAAiELAQgAABoAAAAGAAAAAAAAHjgAAAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMw3AABPAAAAAEAAAKgCAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBgAAAAgAAAAGgAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgCAAAAQAAAAAQAAAAcAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAAOAAAAAAAAEgAAAACAAUATCcAAIAQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQAZBgAAAQAAESgGAAAKbwcAAApyAQAAcCgIAAAKKAkAAAoKcwoAAAoMcwsAAAoNcwsAAAoTBHMLAAAKEwUJchcAAHBvDAAACgkgvgAAAG8NAAAKEQRyIQAAcG8MAAAKEQQg+gAAAG8NAAAKEQQXbw4AAAoRBXIxAABwbwwAAAoRBSDiAAAAbw0AAAoRBRdvDgAACgJQcjMAAHBvDwAACgJQcjMAAHBvEAAACgJQbxEAAAoZjQ0AAAETHBEcFgmiERwXEQSiERwYEQWiERxvEgAACgJQF28TAAAKAlAXbxQAAAoCUHJTAABwbxUAAAoCUBdvFgAACgJQbxcAAAooGAAACm8ZAAAKCwdvGgAACgZvGwAACm8cAAAKJgdvGgAACgZvHQAACm8cAAAKJgJQbxcAAApycQAAcG8ZAAAKCwdvGgAACigeAAAKbx8AAApvHAAACiYoBwAABiwTB28aAAAKcoUAAHBvHAAACiYrEQdvGgAACnKTAABwbxwAAAomAlBvFwAACnKhAABwbxkAAAoLB28aAAAKKCAAAApvIQAACm8cAAAKJigGAAAKbwcAAApvIgAACnK/AABwKAgAAAoTBigjAAAKEwcRBzmcAgAAEQdvJAAACm8lAAAKEx0rahEdbyYAAAp0HgAAARMIEQhvJwAACm8iAAAKEQZvKAAACixHAlBvFwAAChEIbykAAApvGQAACgsHbxoAAAoGbxsAAApvHAAACiYIEQhvKQAAChgRCG8pAAAKbyoAAAocWW8rAAAKbywAAAoRHW8tAAAKLY3eFREddR8AAAETHhEeLAcRHm8uAAAK3AhvLwAAChMfONkBAAASHygwAAAKEwlyMQAAcBMKcjEAAHATCxYTDRYTDhYTDxYTEBEHbyQAAApvJQAAChMgOEcBAAARIG8mAAAKdB4AAAETERERbzEAAAoTDBEMbzIAAAo5JAEAABEMbzIAAApvMwAAChEJbzQAAAo5DAEAABELcjEAAHAoNQAACiwJEQxvHQAAChMLEQ0RDG82AAAKLzIRDG82AAAKEw0RDG83AAAKEw4RDG84AAAKEw8RDG85AAAKExARDG8bAAAKEwo4uAAAABENEQxvNgAACjMxEQ4RDG83AAAKLyYRDG83AAAKEw4RDG84AAAKEw8RDG85AAAKExARDG8bAAAKEworfBENEQxvNgAACjMzEQ4RDG83AAAKMygRDxEMbzgAAAovHREMbzgAAAoTDxEMbzkAAAoTEBEMbxsAAAoTCis+EQ0RDG82AAAKMzMRDhEMbzcAAAozKBEPEQxvOAAACjMdERARDG85AAAKLxIRDG85AAAKExARDG8bAAAKEwoRIG8tAAAKOq3+///eFREgdR8AAAETIREhLAcRIW8uAAAK3BEKcjEAAHAoOgAACiwrAlBvFwAAChEJbxkAAAoLB28aAAAKEQpvHAAACiYHbxoAAAoRC28cAAAKJhIfKDsAAAo6G/7//94OEh/+FgIAABtvLgAACtwoBgAACm88AAAKExIREhMiFhMjOEcBAAARIhEjmhMTcjEAAHATFHIxAABwExVyMQAAcBMWERPQIgAAASg9AAAKFm8+AAAKExcRF45pFjEUERcWmnQiAAABExgRGG8/AAAKExQRE9AlAAABKD0AAAoWbz4AAAoTFxEXjmkWMRQRFxaadCUAAAETGREZb0AAAAoTFRET0CYAAAEoPQAAChZvPgAAChMXEReOaRYxFBEXFpp0JgAAARMaERpvQQAAChMWERRyMQAAcCg6AAAKOYcAAAARFnLTAABwbzQAAAoteREWbyIAAApy5wAAcG80AAAKLWYRFnIxAABwKDoAAAosWAJQbxcAAAoRFG8ZAAAKCxEVcjEAAHAoNQAACiwfB28aAAAKERNvQgAACigJAAAKbxsAAApvHAAACiYrDgdvGgAAChEVbxwAAAomB28aAAAKERZvHAAACiYRIxdYEyMRIxEijmk/rv7//95AExty8wAAcBEbb0MAAApvIQAAChEbb0QAAApvIQAAChEbb0UAAApvIQAACihGAAAKcikBAHAWHxAoRwAACibeACMAAAAAAAAAACoAAABBZAAAAgAAANUBAAB3AAAATAIAABUAAAAAAAAAAgAAAJ8CAABaAQAA+QMAABUAAAAAAAAAAgAAAGkCAADsAQAAVQQAAA4AAAAAAAAAAAAAAAAAAADPBQAAzwUAAEAAAAAnAAABEzACACgAAAACAAARAigDAAAGCgZ+SwAACihMAAAKLAIWKgYDKAIAAAZ+SwAACihNAAAKKhMwAgAtAAAAAwAAEShPAAAKHi4jckUBAHByXwEAcCgFAAAGLBAoBAAABhIAKAYAAAYsAgYqFioXKgAAAEJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAMAEAAAjfgAALAUAAPwHAAAjU3RyaW5ncwAAAAAoDQAAgAEAACNVUwCoDgAAEAAAACNHVUlEAAAAuA4AAMgBAAAjQmxvYgAAAAAAAAACAAABRzUCHAkAAAAA+gEzABYAAAEAAAAzAAAAAgAAAAcAAAAJAAAATwAAAAUAAAACAAAAAwAAAAEAAAACAAAABAAAAAEAAAADAAAAAAAKAAEAAAAAAAYALwAoAAoASwA2AAYAGgH7AAYALQH7AAYAVgH7AAYAagH7AAYAlwF3AQYAtwF3AQYA3gEoAAYADAIoAA4ALQIaAgYAZwJMAgoAbgI2AAoAjgI2AAoAtQI2AAsA6gIAAAoAPwM2AAsATQMAAAoAbgM2AAoAigM2AFMAmwMAAFMA0gMAAAYA8gMoAAYA/gMoAAYALgQoAA4AUwQaAg4AWwQaAgYAkgR/BAYAqQR/BA4AzwQaAgYAIgUoADMANgUAAAYA8AXeBQYABwbeBQYAHgYoAAYAIwYoAAYAZQbeBQYAggbeBQYAtAYoAAYAvgZ/BAoA7gY2AAoA+QY2AAoABgc2AAoAGAc2AAYALAf7AAYAcAdMBwYAjQdMBwYAmQdMBwYArQedBwYAxwcoAAYA0wedBwAAAAABAAAAAAABAAEAgQEQABcAAAAFAAEAAQBQIAAAAACWAFQACgABAAAAAACAAJEgYgARAAIAAAAAAIAAkSBxABcABAAAAAAAgACTIIEAHAAFANwmAAAAAJMAkwAgAAUAAAAAAIAAkyCoACYABwAQJwAAAACWALcALQAKAAAAAQDOAAAAAQDdAAAAAgDlAAAAAQDwAAAAAQDwAAAAAgDlAAAgAAAAAAEAAQBBAQIgAgBiARkAOwExACkAOwE5ADEAOwE5ADkAOwE9AEEAOwE5AEkA6AFCAEkA+gFHAFEAEwJLAFkAPQJRAAwAOwE5AGkAOwE5AGkAewJdAGkAhAI9AGkAqgJiAHkAvQJdAHkA1wJdABEAAQNoAIEADQNtABEAFgN0ABEAKAN0AHkANgNdABEARAN5ABEAZAN/AJkAegOEAJEAlwOIAKEAtQOOAFkAwgNHAKkAlwOTAFkA4gNHALkADgSZAMEAHARHALkANgSeAAkAQgRHAFEASwRHANEAgQCjANEAcwSoAOEAtQStAOkAwwSyAPEA3QRHAFEA6gS2APEA9QRHAFEABAW7AFEADwW/AAwAlwPFAOkAGQXLAPkALgU5AAwAtQTPABQAwwTgAPEAQQXlAFkAVQVHAFEAaQVHAFEAcQW2AFEAegUgAFkAhgW7AFkAmAW7AFkAqgW7AFkAvAW7AFEA0AUgABQAGQXLAEkA+QXqABkBNQbxAAkBRwb6ABEBWwZHACkBNgRHADEBmwZHAAkBpwZHADkBygYDATkB0wZHADkB4gZHAFEAEwIJAUkBJwcRAWkBOwFdAHEBOwFvAYkBOwE5AJEBzgeLAZEBegWOAZEB0AWOAZkBOwE5AJEB8QeYAS4AIwCgAS4AKwCpAWAASwJ5AaAAUwKGAeAAcwKGAQ8ANwATADcAHwGUAZwBPwdXANkAQwEFAGIAAQBGAQcAcQABAEYBCQCBAAEAQAENAKgAAQAEgAAAAAAAAAAAAAAAAAAAAADVAQAAAgAAAAAAAAAAAAAAAQAfAAAAAAAEAAAAAAAAAAAAAAABADYAAAAAAAQAAAAAAAAAAAAAAAEAKAAAAAAAAAAAPE1vZHVsZT4ANHRqNTF3dDQuZGxsAFNuaXBwZXQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uV2luZG93cy5Gb3JtcwBMaXN0VmlldwBBYm91dE1hZ2ljWFBBAEdldFByb2NBZGRyZXNzAEdldE1vZHVsZUhhbmRsZQBHZXRDdXJyZW50UHJvY2VzcwBEb2VzV2luMzJNZXRob2RFeGlzdABJc1dvdzY0UHJvY2VzcwBJczY0Qml0T3BlcmF0aW5nU3lzdGVtAGxpc3RDb21wb25lbnRzAGhNb2R1bGUAbWV0aG9kTmFtZQBtb2R1bGVOYW1lAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNYXJzaGFsQXNBdHRyaWJ1dGUAVW5tYW5hZ2VkVHlwZQAuY3RvcgBoU291cmNlUHJvY2Vzc0hhbmRsZQBJbkF0dHJpYnV0ZQBpc1dvdzY0AE91dEF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUANHRqNTF3dDQAQXBwRG9tYWluAGdldF9DdXJyZW50RG9tYWluAGdldF9CYXNlRGlyZWN0b3J5AFN0cmluZwBDb25jYXQAU3lzdGVtLkRpYWdub3N0aWNzAEZpbGVWZXJzaW9uSW5mbwBHZXRWZXJzaW9uSW5mbwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEAQ29sdW1uSGVhZGVyAHNldF9UZXh0AHNldF9XaWR0aABDb2x1bW5IZWFkZXJBdXRvUmVzaXplU3R5bGUAQXV0b1Jlc2l6ZQBDb250cm9sAHNldF9BY2Nlc3NpYmxlRGVzY3JpcHRpb24Ac2V0X0FjY2Vzc2libGVOYW1lAENvbHVtbkhlYWRlckNvbGxlY3Rpb24AZ2V0X0NvbHVtbnMAQWRkUmFuZ2UAc2V0X0Z1bGxSb3dTZWxlY3QAc2V0X0dyaWRMaW5lcwBzZXRfTmFtZQBWaWV3AHNldF9WaWV3AExpc3RWaWV3SXRlbUNvbGxlY3Rpb24AZ2V0X0l0ZW1zAEFwcGxpY2F0aW9uAGdldF9Qcm9kdWN0TmFtZQBMaXN0Vmlld0l0ZW0AQWRkAExpc3RWaWV3U3ViSXRlbUNvbGxlY3Rpb24AZ2V0X1N1Ykl0ZW1zAGdldF9GaWxlVmVyc2lvbgBMaXN0Vmlld1N1Ykl0ZW0AZ2V0X0NvbXBhbnlOYW1lAEVudmlyb25tZW50AE9wZXJhdGluZ1N5c3RlbQBnZXRfT1NWZXJzaW9uAGdldF9WZXJzaW9uU3RyaW5nAFZlcnNpb24AZ2V0X1ZlcnNpb24AVG9TdHJpbmcAVG9Mb3dlcgBQcm9jZXNzAFByb2Nlc3NNb2R1bGVDb2xsZWN0aW9uAGdldF9Nb2R1bGVzAFN5c3RlbS5Db2xsZWN0aW9ucwBSZWFkT25seUNvbGxlY3Rpb25CYXNlAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAUHJvY2Vzc01vZHVsZQBnZXRfRmlsZU5hbWUAU3RhcnRzV2l0aABnZXRfTW9kdWxlTmFtZQBnZXRfTGVuZ3RoAFN1YnN0cmluZwBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAEVudW1lcmF0b3IAZ2V0X0ZpbGVWZXJzaW9uSW5mbwBnZXRfRmlsZURlc2NyaXB0aW9uAFRvVXBwZXIAQ29udGFpbnMAb3BfRXF1YWxpdHkAZ2V0X0ZpbGVNYWpvclBhcnQAZ2V0X0ZpbGVNaW5vclBhcnQAZ2V0X0ZpbGVCdWlsZFBhcnQAZ2V0X0ZpbGVQcml2YXRlUGFydABvcF9JbmVxdWFsaXR5AFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AEdldEFzc2VtYmxpZXMAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEdldEN1c3RvbUF0dHJpYnV0ZXMAZ2V0X1RpdGxlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAGdldF9D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
                  <SnippetLanguage val="C"/>
                  <ForCompactFramework val="N"/>
                  <isGuiThreadExecution val="Y"/>
                  <CompileTime HighDateTime="30488968" LowDateTime="640860866"/>
                  <AssemblyIds val="-812272197,-279589575,"/>
                  <RetainFocus val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Invoke>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
          <LogicUnit id="5" propagate="78">
            <Level val="H"/>
            <Type val="U"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="U"/>
              <PublicObject comp="-1" obj="2"/>
            </Event>
            <Expanded val="1"/>
            <LogicLines>
              <LogicLine>
                <CallTask FlowIsn="10">
                  <OperationType val="T"/>
                  <TaskID comp="-1" obj="2"/>
                  <Lock val="N"/>
                  <Wait val="Y"/>
                  <SyncData val="N"/>
                  <RetainFocus val="N"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </CallTask>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
        </TaskLogic>
        <TaskForms>
          <FormEntry _last_isn="4" _last_test_id="18" id="2">
            <PropertyList model="FORM_GUI0">
              <Width id="23" val="624"/>
              <Height id="24" val="263"/>
              <GridY id="39" val="2"/>
              <_WindowSort id="133" val="Y"/>
              <_Comment id="218"/>
              <StartupPosition id="275" val="3"/>
              <FormName id="311" valUnicode="About Magic"/>
              <_TabbingOrder id="318" val="2"/>
            </PropertyList>
            <Control _test_id="18" id="1">
              <PropertyList model="CTRL_GUI0_STATIC">
                <X id="21" val="2"/>
                <Y id="22" val="2"/>
                <Width id="23" val="548"/>
                <Height id="24" val="258"/>
                <LineWidth id="76" val="1"/>
                <_Orientation id="143"/>
              </PropertyList>
            </Control>
            <Control PDOD="128" _test_id="15" id="2">
              <PropertyList model="CTRL_GUI0_DOTNET">
                <Placement bottom="100" id="20" right="100"/>
                <X id="21" val="8"/>
                <Y id="22" val="6"/>
                <Width id="23" val="536"/>
                <Height id="24" val="250"/>
                <ControlName id="46" val="listComponents"/>
                <TabOrder id="314" val="1"/>
                <ObjectProperties id="479">
                  <PropertyList model="GENERIC">
                    <Generic DataType="2" id="395565023" name="View" val="1"/>
                  </PropertyList>
                </ObjectProperties>
                <DotnetObject FieldID="1" id="546"/>
                <DataviewcontrolFields id="657"/>
              </PropertyList>
            </Control>
            <Control _test_id="17" id="3">
              <PropertyList model="CTRL_GUI0_PUSH_BUTTON">
                <X id="21" val="556"/>
                <Y id="22" val="2"/>
                <Width id="23" val="64"/>
                <Height id="24" val="16"/>
                <Data FieldID="4" id="43"/>
                <ControlName id="46" val="b_Output"/>
                <RaiseEvent id="234">
                  <EventType val="U"/>
                  <PublicObject comp="-1" obj="2"/>
                </RaiseEvent>
                <TabOrder id="314" val="2"/>
              </PropertyList>
            </Control>
            <Control _test_id="16" id="4">
              <PropertyList model="CTRL_GUI0_PUSH_BUTTON">
                <X id="21" val="556"/>
                <Y id="22" val="244"/>
                <Width id="23" val="64"/>
                <Height id="24" val="16"/>
                <Data FieldID="3" id="43"/>
                <ControlName id="46" val="b_ok"/>
                <RaiseEvent id="234">
                  <EventType val="I"/>
                  <InternalEventID val="14"/>
                  <PublicObject comp="-1"/>
                </RaiseEvent>
                <TabOrder id="314" val="3"/>
              </PropertyList>
            </Control>
          </FormEntry>
        </TaskForms>
        <Expressions>
          <Expression id="1">
            <ExpSyntax val="'&amp;Export'"/>
            <ExpAttribute val="A"/>
          </Expression>
        </Expressions>
        <EVNT DESC="init" FORCE_EXIT="N" id="1">
          <Event>
            <EventType val="N"/>
            <PublicObject comp="-1"/>
          </Event>
        </EVNT>
        <EVNT DESC="Export" FORCE_EXIT="N" id="2">
          <Event>
            <EventType val="N"/>
            <PublicObject comp="-1"/>
          </Event>
        </EVNT>
        <Task MainProgram="N">
          <Header Description="output" ISN_2="2" LastIsn="2" id="33">
            <ExecutionRight comp="-1"/>
            <Resident val="N"/>
            <SQL val="N"/>
            <ReturnValue>
              <ReturnValueAttr/>
              <ParametersAttributes/>
            </ReturnValue>
            <SqlWhereExist val="N"/>
            <TaskType val="B"/>
            <External val="N"/>
            <FormType val="N"/>
            <DotNetObjectExists val="Y"/>
            <LastModified _date="736801" _time="55538" date="17/04/2018" time="15:25:38"/>
          </Header>
          <ItemIsn val="3"/>
          <Resource>
            <Columns>
              <Column id="1" name="v_folder+file">
                <PropertyList model="FIELD">
                  <Model attr_obj="FIELD_ALPHA" id="1"/>
                  <Picture id="157" valUnicode="100"/>
                  <StoredAs id="173" val="1"/>
                  <Size id="174" val="100"/>
                  <_Flip id="194"/>
                </PropertyList>
              </Column>
              <Column id="2" name="v_result">
                <PropertyList model="FIELD">
                  <Model attr_obj="FIELD_NUMERIC" id="1"/>
                  <Picture id="157" valUnicode="1"/>
                  <_Dec id="181"/>
                  <_Whole id="182" val="1"/>
                  <_Negative id="192"/>
                  <_FieldStyle id="276" val="1"/>
                </PropertyList>
              </Column>
              <Column id="3" name="pi-_Melding">
                <PropertyList model="FIELD">
                  <Model attr_obj="FIELD_ALPHA" id="1"/>
                  <Picture id="157" valUnicode="100"/>
                  <Size id="174" val="100"/>
                  <_Flip id="194"/>
                </PropertyList>
              </Column>
            </Columns>
          </Resource>
          <Information>
            <Key>
              <Mode val="N"/>
            </Key>
            <DB comp="-1"/>
            <Sort>
              <CLS val="A"/>
            </Sort>
            <ForceRecordDelete DEL="N"/>
            <EndTaskCondition val="Y"/>
            <EvaluateEndCondition val="A"/>
            <InitialMode val="M"/>
            <Locate Direction="A"/>
            <Range Direction="A"/>
            <VarRange/>
            <TaskProperties>
              <SelectionTable val="N"/>
              <ConfirmUpdate CNFU="N"/>
              <ConfirmCancel val="N"/>
              <ErrorStrategy val="A"/>
              <LockingStrategy val="I"/>
              <CacheStrategy val="N"/>
              <ForceRecordSuffix val="N"/>
              <TransactionMode val="W"/>
              <TransactionBegin val="T"/>
              <PreloadView val="N"/>
              <AllowEmptyDataview val="N"/>
              <KeepCreatedContext val="N"/>
            </TaskProperties>
            <SIDE_WIN>
              <AllowOptions val="N"/>
              <AllowQuery val="Y"/>
              <AllowModify val="Y"/>
              <AllowCreate val="Y"/>
              <AllowDelete val="Y"/>
              <AllowLocate val="Y"/>
              <AllowRange val="Y"/>
              <AllowIndexChange val="Y"/>
              <AllowSorting val="Y"/>
              <AllowIOFiles val="Y"/>
              <RecordCycle val="Y"/>
              <AllowEvents val="Y"/>
              <AllowIndexOptimization val="Y"/>
              <AllowLocationInQuery val="Y"/>
              <AllowPrintingData val="N"/>
            </SIDE_WIN>
            <WIN>
              <OpenTaskWindow val="N"/>
              <CloseTaskWindow val="Y"/>
              <ForegroundWindow val="Y"/>
              <FlipFld val="N"/>
              <RefreshTaskWindow ReturnValue="N"/>
            </WIN>
            <BOX>
              <Direction val="V"/>
            </BOX>
          </Information>
          <TaskLogic>
            <LogicUnit id="2" propagate="78">
              <Level val="R"/>
              <Type val="M"/>
              <Scope val="S"/>
              <EngineDirective val="S"/>
              <ShowMessage val="Y"/>
              <Condition val="89"/>
              <Event>
                <EventType val="S"/>
                <PublicObject comp="-1"/>
              </Event>
              <LogicLines>
                <LogicLine>
                  <DATAVIEW_SRC FlowIsn="2" Type="M">
                    <Condition val="N"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </DATAVIEW_SRC>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="1" FlowIsn="3" id="1">
                    <Column val="1"/>
                    <Type val="V"/>
                    <IsParameter val="N"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <Select FieldID="2" FlowIsn="4" id="2">
                    <Column val="2"/>
                    <Type val="V"/>
                    <IsParameter val="N"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
              </LogicLines>
            </LogicUnit>
            <LogicUnit id="3" propagate="78">
              <Level val="R"/>
              <Type val="P"/>
              <Scope val="S"/>
              <EngineDirective val="S"/>
              <ShowMessage val="Y"/>
              <Condition val="89"/>
              <Event>
                <EventType val="S"/>
                <PublicObject comp="-1"/>
              </Event>
              <Expanded val="1"/>
              <LogicLines>
                <LogicLine>
                  <Update FlowIsn="5">
                    <FieldID val="1"/>
                    <WithValue val="3"/>
                    <Incremental val="N"/>
                    <ForcedUpdate val="Y"/>
                    <Condition Exp="5"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </Update>
                </LogicLine>
                <LogicLine>
                  <Invoke FlowIsn="7">
                    <OperationType val="."/>
                    <TaskID comp="-1"/>
                    <Lock val="Y"/>
                    <Arguments>
                      <Argument>
                        <Variable val="2"/>
                        <Skip val="N"/>
                        <DotNetType val="System.Double"/>
                      </Argument>
                      <Argument>
                        <Variable val="1"/>
                        <Skip val="N"/>
                        <Name val="Folder"/>
                        <DotNetType val="System.String"/>
                      </Argument>
                    </Arguments>
                    <Wait val="Y"/>
                    <SyncData val="N"/>
                    <ReturnValue val="2"/>
                    <FunctionName val="Export"/>
                    <SnippetCode val="using System;&#xA;using System.Diagnostics;&#xA;using System.IO;&#xA;using System.Windows.Forms;&#xA;&#xA;public static class Snippet&#xA;{&#xA; public static System.Double Export(System.String Folder)&#xA; {&#xA;  try&#xA;  {&#xA;   StreamWriter file = new System.IO.StreamWriter( Folder );&#xA;   &#xA;   if(IntPtr.Size == 8)&#xA;    file.WriteLine(&quot;OS Versie;&quot; + Environment.OSVersion.VersionString +&#xA;       &quot;;64 bit&quot; );&#xA;   else&#xA;    file.WriteLine(&quot;OS Versie;&quot; + Environment.OSVersion.VersionString +&#xA;       &quot;;32 bit&quot; );&#xA;   &#xA;   &#xA;   Process myProcess = Process.GetCurrentProcess();&#xA;   if(myProcess != null)&#xA;   {&#xA;    foreach (ProcessModule processModule in myProcess.Modules)&#xA;    {&#xA;     file.WriteLine(processModule.ModuleName + &quot;;&quot; + processModule.FileVersionInfo.FileVersion +&#xA;       &quot;;&quot; + processModule.FileVersionInfo.FileDescription);&#xA;    }&#xA;   }&#xA;   file.Close();&#xA;  }&#xA;  catch (Exception)&#xA;  {&#xA;   return 1;&#xA;   //MessageBox.Show(&quot;Er is een fout opgetreden:&quot;&#xA;   //+e.Data.ToString()&#xA;   //+e.StackTrace.ToString()&#xA;   //+e.InnerException.ToString()&#xA;   //+e.Message.ToString(), &quot;Error occured&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);&#xA;  }&#xA;  return 0;&#xA; }&#xA;&#xA;}"/>
                    <CompiledCode val="TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDAK311VoAAAAAAAAAAOAAAiELAQsAAAgAAAAGAAAAAAAALicAAAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANgmAABTAAAAAEAAAKgCAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANAcAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgCAAAAQAAAAAQAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAADgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQJwAAAAAAAEgAAAACAAUAgCEAAFgFAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBAAHAQAAAQAAEQJzAwAACgooBAAACh4zIQZyAQAAcCgFAAAKbwYAAApyFwAAcCgHAAAKbwgAAAorHwZyAQAAcCgFAAAKbwYAAApyJwAAcCgHAAAKbwgAAAooCQAACgsHOYsAAAAHbwoAAApvCwAAChMEK1wRBG8MAAAKdA4AAAEMBhuNCAAAARMFEQUWCG8NAAAKohEFF3I3AABwohEFGAhvDgAACm8PAAAKohEFGXI3AABwohEFGghvDgAACm8QAAAKohEFKBEAAApvCAAAChEEbxIAAAotm94VEQR1EAAAARMGEQYsBxEGbxMAAArcBm8UAAAK3g0mIwAAAAAAAPA/Dd4KIwAAAAAAAAAAKgkqAAEcAAACAGgAadEAFQAAAAAAAAAA7u4ADREAAAFCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACoAQAAI34AABQCAABsAgAAI1N0cmluZ3MAAAAAgAQAADwAAAAjVVMAvAQAABAAAAAjR1VJRAAAAMwEAACMAAAAI0Jsb2IAAAAAAAAAAgAAAUcVAgAJAAAAAPolMwAWAAABAAAAEQAAAAIAAAABAAAAAQAAABQAAAACAAAAAQAAAAEAAAACAAAAAAAKAAEAAAAAAAYALwAoAAYAZABEAAYAigBEAAYAuwCxAAYAyAAoAAYA2AAoAAYA5AAoAAYAFAEoAAYAIgGxAAoASgE3AQoAZAE3AQYAmwGIAQYAsgGIAQoA2AE3AQoA9QE3AQYARgIoAAYAYAIoAAAAAAABAAAAAAABAAEAgQEQABcAAAAFAAEAAQBQIAAAAACWADYACgABAAAAAQA9ABEAhAAPABkAhAAUACEAhAAYACkAzwAdADEA9AAhADkAAgEmAEEAGwEqAEkALQEYAFEAUgExAFEAfAE2AGEAvgE7AGkAzAFAAHEA5gEmAHEABQJEAHkAGQImAHkAKQImAEEAGwFJAGkAPQJPAIEAUgIUAEkAWgIUAC4ACwBjAC4AEwBsAFMABIAAAAAAAAAAAAAAAAAAAAAAqAAAAAQAAAAAAAAAAAAAAAEAHwAAAAAABAAAAAAAAAAAAAAAAQAoAAAAAAAAAAAAADxNb2R1bGU+AGh3czB4Ymd6LmRsbABTbmlwcGV0AG1zY29ybGliAFN5c3RlbQBPYmplY3QARXhwb3J0AEZvbGRlcgBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUALmN0b3IAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAaHdzMHhiZ3oAU3lzdGVtLklPAFN0cmVhbVdyaXRlcgBJbnRQdHIAZ2V0X1NpemUARW52aXJvbm1lbnQAT3BlcmF0aW5nU3lzdGVtAGdldF9PU1ZlcnNpb24AZ2V0X1ZlcnNpb25TdHJpbmcAU3RyaW5nAENvbmNhdABUZXh0V3JpdGVyAFdyaXRlTGluZQBTeXN0ZW0uRGlhZ25vc3RpY3MAUHJvY2VzcwBHZXRDdXJyZW50UHJvY2VzcwBQcm9jZXNzTW9kdWxlQ29sbGVjdGlvbgBnZXRfTW9kdWxlcwBTeXN0ZW0uQ29sbGVjdGlvbnMAUmVhZE9ubHlDb2xsZWN0aW9uQmFzZQBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AFByb2Nlc3NNb2R1bGUAZ2V0X01vZHVsZU5hbWUARmlsZVZlcnNpb25JbmZvAGdldF9GaWxlVmVyc2lvbkluZm8AZ2V0X0ZpbGVWZXJzaW9uAGdldF9GaWxlRGVzY3JpcHRpb24ATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBDbG9zZQBFeGNlcHRpb24AAAAAFU8AUwAgAFYAZQByAHMAaQBlADsAAA87ADYANAAgAGIAaQB0AAAPOwAzADIAIABiAGkAdAAAAzsAAABVZ19v/EwUQZahcGF2RTZuAAi3elxWGTTgiQQAAQ0OBCABAQgDIAABBCABAQ4DAAAIBAAAEh0DIAAOBgADDg4ODgQAABIpBCAAEi0EIAASNQMgABwEIAASPQUAAQ4dDgMgAAIPBwcSERIpEjkNEjUdDhJBCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAJwAAAAAAAAAAAAAeJwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECcAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAABMAgAAAAAAAAAAAABMAjQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAErAEAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAiAEAAAEAMAAwADAAMAAwADQAYgAwAAAALAACAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAACAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADAALgAwAC4AMAAuADAAAAA8AA0AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAGgAdwBzADAAeABiAGcAegAuAGQAbABsAAAAAAAoAAIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAAAgAAAARAANAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAGgAdwBzADAAeABiAGcAegAuAGQAbABsAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAwAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADAALgAwAC4AMAAu
                    <SnippetLanguage val="C"/>
                    <ForCompactFramework val="N"/>
                    <isGuiThreadExecution val="N"/>
                    <CompileTime HighDateTime="30660175" LowDateTime="2102305963"/>
                    <AssemblyIds val="-279589575,"/>
                    <RetainFocus val="Y"/>
                    <Condition val="Y"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </Invoke>
                </LogicLine>
                <LogicLine>
                  <STP Buttons="O" DefaultButton="1" ERR_LOG_DEF_CHG="N" Exp="1" FlowIsn="10" IMG_DEF_CHG="Y" Image="I" Mode="W" TTL_DEF_CHG="Y" TitleExp="9" VR_DISP="B">
                    <AppendToErrorLog val="N"/>
                    <Condition Exp="7"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </STP>
                </LogicLine>
                <LogicLine>
                  <RaiseEvent FlowIsn="9">
                    <Event>
                      <EventType val="U"/>
                      <PublicObject comp="-1" obj="1"/>
                    </Event>
                    <Wait val="89"/>
                    <Arguments>
                      <Argument>
                        <Expression val="2"/>
                        <Skip val="N"/>
                      </Argument>
                    </Arguments>
                    <Condition Exp="8"/>
                    <Modifier val="S"/>
                    <Direction val="C"/>
                  </RaiseEvent>
                </LogicLine>
                <LogicLine>
                  <Remark FlowIsn="13">
                    <Type val="2"/>
                    <Text val=" "/>
                  </Remark>
                </LogicLine>
              </LogicLines>
            </LogicUnit>
            <LogicUnit id="4" propagate="78">
              <Level val="H"/>
              <Type val="U"/>
              <Scope val="T"/>
              <EngineDirective val="S"/>
              <ShowMessage val="Y"/>
              <Condition val="89"/>
              <Event>
                <EventType val="U"/>
                <PublicObject comp="-1" obj="1"/>
              </Event>
              <Expanded val="1"/>
              <LogicLines>
                <LogicLine>
                  <Select FieldID="3" FlowIsn="14" id="3">
                    <ASS val="12"/>
                    <Column val="3"/>
                    <Type val="V"/>
                    <IsParameter val="Y"/>
                    <DIFF_UPDATE val="T"/>
                    <Condition val="Y"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </Select>
                </LogicLine>
                <LogicLine>
                  <STP Buttons="O" DefaultButton="1" ERR_LOG_DEF_CHG="Y" Exp="11" FlowIsn="16" IMG_DEF_CHG="Y" Image="C" Mode="R" TTL_DEF_CHG="Y" TitleExp="10" VR_DISP="B">
                    <AppendToErrorLog val="Y"/>
                    <Condition val="Y"/>
                    <Modifier val="B"/>
                    <Direction val="C"/>
                  </STP>
                </LogicLine>
              </LogicLines>
            </LogicUnit>
          </TaskLogic>
          <TaskForms>
            <FormEntry _last_test_id="3" id="2">
              <PropertyList model="FORM_GUI0">
                <Width id="23" val="356"/>
                <Height id="24" val="88"/>
                <_Comment id="218"/>
                <FormName id="311" valUnicode="output"/>
              </PropertyList>
            </FormEntry>
          </TaskForms>
          <Expressions>
            <Expression id="1">
              <ExpSyntax val="'De export is aangemaakt:'&amp; ASCIIChr (10)&amp; {0,1}"/>
              <ExpAttribute val="A"/>
            </Expression>
            <Expression id="2">
              <ExpSyntax val="'De export is niet aangemaakt:'&amp; ASCIIChr (10)&amp; {0,1}"/>
              <ExpAttribute val="A"/>
            </Expression>
            <Expression id="3">
              <ExpSyntax val="Translate('%EPPLUSCLIENT_TEMP%\About.txt')"/>
              <ExpAttribute val="A"/>
            </Expression>
            <Expression id="5">
              <ExpSyntax val="NOT(Translate('%EPPLUSCLIENT_TEMP%')='')"/>
              <ExpAttribute val="B"/>
            </Expression>
            <Expression id="7">
              <ExpSyntax val="{0,2}=0"/>
              <ExpAttribute val="B"/>
            </Expression>
            <Expression id="8">
              <ExpSyntax val="{0,2}&lt;>0"/>
              <ExpAttribute val="B"/>
            </Expression>
            <Expression id="9">
              <ExpSyntax val="MlsTrans('Informatie')"/>
              <ExpAttribute val="U"/>
            </Expression>
            <Expression id="10">
              <ExpSyntax val="MlsTrans('Error')"/>
              <ExpAttribute val="U"/>
            </Expression>
            <Expression id="11">
              <ExpSyntax val="{0,3}"/>
              <ExpAttribute val="A"/>
            </Expression>
            <Expression id="12">
              <ExpSyntax val="''"/>
              <ExpAttribute val="A"/>
            </Expression>
          </Expressions>
          <EVNT DESC="Error" FORCE_EXIT="N" id="1">
            <Event>
              <EventType val="N"/>
              <PublicObject comp="-1"/>
            </Event>
            <EVENT_PARAMETER ATTR="A" NAME="pi-_Melding" PICT_U="100" id="1">
              <MODEL>
                <PublicObject comp="-1"/>
              </MODEL>
            </EVENT_PARAMETER>
          </EVNT>
        </Task>
      </Task>
    </Programs>
  </ProgramsRepository>

</Application>
